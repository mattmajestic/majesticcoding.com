{{ template "base" . }}

<body class="min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100 dark:from-gray-900 dark:to-gray-800">
  <div class="container mx-auto px-4 py-8">

    <!-- Header -->
    <div class="max-w-4xl mx-auto mb-8">
      <div class="text-center">
        <img src="https://avatars.githubusercontent.com/u/33904170?v=4" alt="Majestic Coding" class="w-16 h-16 rounded-full mx-auto mb-4">
        <h1 class="text-3xl font-bold text-gray-800 dark:text-white mb-2">User Information</h1>
        <p class="text-gray-600 dark:text-gray-300">Your account details and profile data</p>
      </div>
    </div>

    <!-- Loading State -->
    <div id="loading-state" class="max-w-md mx-auto">
      <div class="bg-white dark:bg-gray-800 rounded-lg shadow-xl p-8 border border-gray-200 dark:border-gray-700 text-center">
        <div class="animate-spin rounded-full h-8 w-8 border-b-2 border-blue-500 mx-auto mb-4"></div>
        <h2 class="text-xl font-bold text-gray-800 dark:text-white mb-2">Loading...</h2>
        <p class="text-gray-600 dark:text-gray-300">Checking authentication status...</p>
      </div>
    </div>

    <!-- Not Authenticated -->
    <div id="not-authenticated" class="max-w-md mx-auto hidden">
      <div class="bg-white dark:bg-gray-800 rounded-lg shadow-xl p-8 border border-gray-200 dark:border-gray-700 text-center">
        <i class="fas fa-lock text-4xl text-gray-400 mb-4"></i>
        <h2 class="text-xl font-bold text-gray-800 dark:text-white mb-2">Authentication Required</h2>
        <p class="text-gray-600 dark:text-gray-300 mb-6">Please sign in to view your user information.</p>
        <a href="/auth" class="inline-block bg-blue-600 hover:bg-blue-700 text-white font-medium py-2 px-6 rounded-md transition duration-300">
          Sign In
        </a>
      </div>
    </div>

    <!-- Authenticated Content -->
    <div id="authenticated-content" class="max-w-6xl mx-auto grid lg:grid-cols-2 gap-8 hidden">

      <!-- Supabase User Data -->
      <div class="bg-white dark:bg-gray-800 rounded-lg shadow-xl p-6 border border-gray-200 dark:border-gray-700">
        <div class="flex items-center mb-6">
          <i class="fas fa-cloud text-2xl text-blue-600 mr-3"></i>
          <h2 class="text-xl font-bold text-gray-800 dark:text-white">Supabase Profile</h2>
        </div>

        <div id="supabase-user-data" class="space-y-4">
          <!-- Content will be populated by JavaScript -->
        </div>
      </div>

      <!-- Database User Data -->
      <div class="bg-white dark:bg-gray-800 rounded-lg shadow-xl p-6 border border-gray-200 dark:border-gray-700">
        <div class="flex items-center mb-6">
          <i class="fas fa-database text-2xl text-green-600 mr-3"></i>
          <h2 class="text-xl font-bold text-gray-800 dark:text-white">Database Profile</h2>
        </div>

        <div id="database-user-data">
          <!-- Content will be populated by JavaScript -->
        </div>
      </div>
    </div>

    <!-- Actions -->
    <div class="max-w-4xl mx-auto mt-8">
      <div class="bg-white dark:bg-gray-800 rounded-lg shadow-xl p-6 border border-gray-200 dark:border-gray-700">
        <h3 class="text-lg font-bold text-gray-800 dark:text-white mb-4">Account Actions</h3>
        <div class="flex flex-wrap gap-3">
          <button id="refresh-data" class="bg-blue-600 hover:bg-blue-700 text-white font-medium py-2 px-4 rounded-md transition duration-300">
            <i class="fas fa-refresh mr-2"></i>Refresh Data
          </button>
          <button id="sync-user" class="bg-green-600 hover:bg-green-700 text-white font-medium py-2 px-4 rounded-md transition duration-300">
            <i class="fas fa-sync mr-2"></i>Sync to Database
          </button>
          <a href="/dashboard" class="bg-gray-600 hover:bg-gray-700 text-white font-medium py-2 px-4 rounded-md transition duration-300">
            <i class="fas fa-dashboard mr-2"></i>Go to Dashboard
          </a>
        </div>
      </div>
    </div>

    <div class="text-center mt-8">
      <a href="/" class="text-blue-600 hover:text-blue-500 dark:text-blue-400 text-sm">‚Üê Back to Home</a>
    </div>
  </div>

  <script>
    let authManager;

    // Wait for auth manager to initialize
    function waitForAuthManager() {
      return new Promise((resolve) => {
        const checkAuthManager = () => {
          if (window.authManager) {
            authManager = window.authManager;
            resolve();
          } else {
            setTimeout(checkAuthManager, 100);
          }
        };
        checkAuthManager();
      });
    }

    // Check auth status and redirect if needed
    async function checkAuthAndRedirect() {
      await waitForAuthManager();

      const user = authManager.getCurrentUser();
      const token = await authManager.getAccessToken();

      if (!user || !token) {
        // Not authenticated, redirect to auth page
        window.location.href = '/auth';
        return false;
      }

      return true;
    }

    async function loadUserData() {
      try {
        const token = await authManager.getAccessToken();
        const response = await fetch('/api/user-info', {
          headers: {
            'Authorization': `Bearer ${token}`,
            'Content-Type': 'application/json'
          }
        });

        if (response.ok) {
          const data = await response.json();
          displayUserData(data);

          // Auto-sync if not in database
          if (!data.database_user) {
            setTimeout(autoSync, 1000);
          }
        } else {
          throw new Error('Failed to load user data');
        }
      } catch (error) {
        console.error('Failed to load user data:', error);
        showNotAuthenticated();
      }
    }

    async function autoSync() {
      try {
        const token = await authManager.getAccessToken();
        const response = await fetch('/api/user/sync', {
          method: 'POST',
          headers: {
            'Authorization': `Bearer ${token}`,
            'Content-Type': 'application/json'
          }
        });

        if (response.ok) {
          // Reload user data to show synced data
          loadUserData();
        }
      } catch (error) {
        console.log('Auto-sync failed:', error);
      }
    }

    function displayUserData(data) {
      const { supabase_user, database_user } = data;

      // Hide loading, show content
      document.getElementById('loading-state').classList.add('hidden');
      document.getElementById('authenticated-content').classList.remove('hidden');

      // Display Supabase user data
      const supabaseDiv = document.getElementById('supabase-user-data');
      supabaseDiv.innerHTML = `
        <div class="flex items-center space-x-4 mb-4">
          ${supabase_user.user_metadata?.avatar_url ?
            `<img src="${supabase_user.user_metadata.avatar_url}" alt="Avatar" class="w-16 h-16 rounded-full">` :
            `<div class="w-16 h-16 bg-gray-300 dark:bg-gray-600 rounded-full flex items-center justify-center">
              <i class="fas fa-user text-gray-500 text-xl"></i>
            </div>`
          }
          <div>
            <h3 class="text-lg font-semibold text-gray-800 dark:text-white">
              ${supabase_user.user_metadata?.full_name || supabase_user.email}
            </h3>
            <p class="text-sm text-gray-500 dark:text-gray-400">${supabase_user.email}</p>
          </div>
        </div>

        <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
          <div class="bg-gray-50 dark:bg-gray-700 p-3 rounded-md">
            <span class="text-sm font-medium text-gray-500 dark:text-gray-400">User ID</span>
            <p class="text-sm text-gray-800 dark:text-white font-mono">${supabase_user.id}</p>
          </div>
          <div class="bg-gray-50 dark:bg-gray-700 p-3 rounded-md">
            <span class="text-sm font-medium text-gray-500 dark:text-gray-400">Email Verified</span>
            <p class="text-sm text-gray-800 dark:text-white">
              ${supabase_user.email_confirmed_at ?
                '<span class="text-green-600"><i class="fas fa-check-circle mr-1"></i>Verified</span>' :
                '<span class="text-red-600"><i class="fas fa-times-circle mr-1"></i>Not Verified</span>'
              }
            </p>
          </div>
          ${supabase_user.last_sign_in_at ? `
          <div class="bg-gray-50 dark:bg-gray-700 p-3 rounded-md">
            <span class="text-sm font-medium text-gray-500 dark:text-gray-400">Last Sign In</span>
            <p class="text-sm text-gray-800 dark:text-white">${new Date(supabase_user.last_sign_in_at).toLocaleString()}</p>
          </div>
          ` : ''}
        </div>

        <details class="mt-4">
          <summary class="cursor-pointer text-sm font-medium text-gray-600 dark:text-gray-300 hover:text-gray-800 dark:hover:text-white">
            <i class="fas fa-code mr-1"></i>View Raw Supabase Data
          </summary>
          <div class="mt-3 bg-gray-100 dark:bg-gray-700 p-3 rounded-md">
            <pre class="text-xs text-gray-800 dark:text-gray-200 overflow-x-auto">${JSON.stringify(supabase_user, null, 2)}</pre>
          </div>
        </details>
      `;

      // Display database user data
      const databaseDiv = document.getElementById('database-user-data');
      if (database_user) {
        databaseDiv.innerHTML = `
          <div class="space-y-4">
            <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
              <div class="bg-gray-50 dark:bg-gray-700 p-3 rounded-md">
                <span class="text-sm font-medium text-gray-500 dark:text-gray-400">Database ID</span>
                <p class="text-sm text-gray-800 dark:text-white">${database_user.id}</p>
              </div>
              <div class="bg-gray-50 dark:bg-gray-700 p-3 rounded-md">
                <span class="text-sm font-medium text-gray-500 dark:text-gray-400">Provider</span>
                <p class="text-sm text-gray-800 dark:text-white">
                  <span class="capitalize">${database_user.provider || 'Email'}</span>
                </p>
              </div>
              <div class="bg-gray-50 dark:bg-gray-700 p-3 rounded-md">
                <span class="text-sm font-medium text-gray-500 dark:text-gray-400">Created At</span>
                <p class="text-sm text-gray-800 dark:text-white">${new Date(database_user.created_at).toLocaleString()}</p>
              </div>
              <div class="bg-gray-50 dark:bg-gray-700 p-3 rounded-md">
                <span class="text-sm font-medium text-gray-500 dark:text-gray-400">Updated At</span>
                <p class="text-sm text-gray-800 dark:text-white">${new Date(database_user.updated_at).toLocaleString()}</p>
              </div>
            </div>

            <details class="mt-4">
              <summary class="cursor-pointer text-sm font-medium text-gray-600 dark:text-gray-300 hover:text-gray-800 dark:hover:text-white">
                <i class="fas fa-database mr-1"></i>View Raw Database Data
              </summary>
              <div class="mt-3 bg-gray-100 dark:bg-gray-700 p-3 rounded-md">
                <pre class="text-xs text-gray-800 dark:text-gray-200 overflow-x-auto">${JSON.stringify(database_user, null, 2)}</pre>
              </div>
            </details>
          </div>
        `;
      } else {
        databaseDiv.innerHTML = `
          <div class="text-center py-8">
            <i class="fas fa-exclamation-triangle text-3xl text-yellow-500 mb-4"></i>
            <h3 class="text-lg font-semibold text-gray-800 dark:text-white mb-2">Not Synced to Database</h3>
            <p class="text-gray-600 dark:text-gray-300 mb-4">Your user data hasn't been synced to the database yet.</p>
            <p class="text-sm text-gray-500 dark:text-gray-400">Syncing automatically...</p>
          </div>
        `;
      }
    }

    function showNotAuthenticated() {
      document.getElementById('loading-state').classList.add('hidden');
      document.getElementById('not-authenticated').classList.remove('hidden');
    }

    document.addEventListener('DOMContentLoaded', async () => {
      const isAuthenticated = await checkAuthAndRedirect();
      if (!isAuthenticated) {
        showNotAuthenticated();
        return;
      }

      // Load user data
      loadUserData();
    });

    document.getElementById('sync-user')?.addEventListener('click', async () => {
      try {
        await waitForAuthManager();
        const token = await authManager.getAccessToken();

        if (!token) {
          alert('Please sign in first');
          return;
        }

        const response = await fetch('/api/user/sync', {
          method: 'POST',
          headers: {
            'Authorization': `Bearer ${token}`,
            'Content-Type': 'application/json'
          }
        });

        const result = await response.json();

        if (response.ok) {
          alert('User data synced successfully!');
          window.location.reload();
        } else {
          alert('Sync failed: ' + result.error);
        }
      } catch (error) {
        alert('Sync failed: ' + error.message);
      }
    });

    document.getElementById('refresh-data')?.addEventListener('click', () => {
      window.location.reload();
    });
  </script>
  <script type="module" src="/static/components/supabase-auth.js"></script>
  <script src="/static/components/theme.js"></script>
</body>

{{ template "footer_home" . }}