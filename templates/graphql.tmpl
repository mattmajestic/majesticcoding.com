{{ template "base" . }}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>GraphQL Playground - Majestic Coding</title>
    <link rel="stylesheet" href="/static/styles.css">
</head>
<body class="min-h-screen transition-colors">

    <!-- Header -->
    <div class="bg-gray-800 border-b border-gray-700 px-4 py-6">
        <div class="flex items-center justify-between max-w-6xl mx-auto">
            <div class="flex items-center space-x-4">
                <img src="https://avatars.githubusercontent.com/u/33904170?v=4"
                     alt="GraphQL" class="w-10 h-10 rounded-full glowing-effect" />
                <div>
                    <h1 class="text-2xl font-bold text-white">GraphQL API</h1>
                    <p class="text-gray-400">Unified stats from YouTube, GitHub, Twitch, and LeetCode</p>
                </div>
            </div>
            <div class="text-light-blue font-mono text-sm bg-gray-700 px-3 py-1 rounded">
                POST /api/graphql
            </div>
        </div>
    </div>

    <!-- Main Container -->
    <div class="max-w-7xl mx-auto p-8">
        <div class="grid grid-cols-1 lg:grid-cols-2 gap-8">
            <!-- Query Section -->
            <div class="bg-gray-800 rounded-lg border border-gray-700 p-8">
                <div class="flex items-center justify-between mb-6">
                    <h3 class="text-2xl font-semibold text-white flex items-center">
                        üìù GraphQL Query
                    </h3>
                </div>

                <!-- Example Buttons -->
                <div class="grid grid-cols-3 gap-3 mb-6">
                    <button class="example-btn px-4 py-3 bg-light-blue hover:bg-blue-400 text-white rounded-lg text-base transition-all duration-200 font-medium shadow-lg hover:shadow-xl transform hover:scale-105 flex items-center justify-center gap-2"
                            onclick="loadExample('full')">
                        <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 20 20">
                            <path d="M13.586 3.586a2 2 0 112.828 2.828l-.793.793-2.828-2.828.793-.793zM11.379 5.793L3 14.172V17h2.828l8.38-8.379-2.83-2.828z"></path>
                        </svg>
                        Full Query
                    </button>
                    <button class="example-btn px-4 py-3 bg-red-600 hover:bg-red-500 text-white rounded-lg text-base transition-all duration-200 font-medium shadow-lg hover:shadow-xl transform hover:scale-105 flex items-center justify-center gap-2"
                            onclick="loadExample('youtube')">
                        <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 24 24">
                            <path d="M23.498 6.186a3.016 3.016 0 0 0-2.122-2.136C19.505 3.545 12 3.545 12 3.545s-7.505 0-9.377.505A3.017 3.017 0 0 0 .502 6.186C0 8.07 0 12 0 12s0 3.93.502 5.814a3.016 3.016 0 0 0 2.122 2.136c1.871.505 9.376.505 9.376.505s7.505 0 9.377-.505a3.015 3.015 0 0 0 2.122-2.136C24 15.93 24 12 24 12s0-3.93-.502-5.814zM9.545 15.568V8.432L15.818 12l-6.273 3.568z"/>
                        </svg>
                        YouTube
                    </button>
                    <button class="example-btn px-4 py-3 bg-gray-800 hover:bg-gray-700 text-white rounded-lg text-base transition-all duration-200 font-medium shadow-lg hover:shadow-xl transform hover:scale-105 flex items-center justify-center gap-2"
                            onclick="loadExample('github')">
                        <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 24 24">
                            <path d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z"/>
                        </svg>
                        GitHub
                    </button>
                </div>

                <!-- Query Textarea -->
                <textarea id="query"
                          class="w-full h-96 p-4 bg-gray-900 text-gray-300 border border-gray-600 rounded-lg font-mono text-sm focus:outline-none focus:ring-2 focus:ring-light-blue resize-none"
                          placeholder="Enter your GraphQL query here...">query {
  unifiedStats {
    youtube {
      channelName
      subscribers
      views
      videos
    }
    github {
      username
      publicRepos
      followers
      starsReceived
    }
    twitch {
      displayName
      description
      broadcasterType
      followers
    }
    leetcode {
      username
      languages
      solvedCount
      ranking
    }
  }
}</textarea>

                <!-- Action Buttons -->
                <div class="flex gap-4 mt-6">
                    <button class="flex items-center px-6 py-3 bg-light-blue hover:bg-blue-400 text-white rounded-lg transition-colors font-medium text-lg"
                            onclick="executeQuery()">
                        ‚ñ∂Ô∏è Execute Query
                    </button>
                    <button class="flex items-center px-6 py-3 bg-green-600 hover:bg-green-500 text-white rounded-lg transition-colors font-medium text-lg"
                            onclick="showSchema()">
                        üìã Show Schema
                    </button>
                </div>
            </div>

            <!-- Result Section -->
            <div class="bg-gray-800 rounded-lg border border-gray-700 p-8">
                <h3 class="text-2xl font-semibold text-white mb-6 flex items-center">
                    üìä Response
                </h3>
                <div id="result"
                     class="w-full h-[340px] p-6 bg-gray-900 text-gray-300 border border-gray-600 rounded-lg font-mono text-base leading-relaxed overflow-y-auto whitespace-pre-wrap">
                    Click "Execute Query" to see results
                </div>
            </div>
        </div>
    </div>

    {{ template "footer_home" . }}

    <!-- Scripts -->
    <script src="/static/components/theme.js"></script>
    <script>
        const examples = {
            full: `query {
  unifiedStats {
    youtube {
      channelName
      subscribers
      views
      videos
    }
    github {
      username
      publicRepos
      followers
      starsReceived
    }
    twitch {
      displayName
      description
      broadcasterType
      followers
    }
    leetcode {
      username
      languages
      solvedCount
      ranking
    }
  }
}`,
            youtube: `query {
  unifiedStats {
    youtube {
      channelName
      subscribers
      views
      videos
    }
  }
}`,
            github: `query {
  unifiedStats {
    github {
      username
      publicRepos
      followers
      starsReceived
    }
  }
}`,
            basic: `query {
  unifiedStats {
    youtube { channelName subscribers }
    github { username followers }
    twitch { displayName followers }
    leetcode { username solvedCount }
  }
}`
        };

        function loadExample(type) {
            document.getElementById('query').value = examples[type];
        }

        function showSchema() {
            const schema = `type Query {
  unifiedStats: UnifiedStats
}

type UnifiedStats {
  youtube: YouTubeStats
  github: GitHubStats
  twitch: TwitchStats
  leetcode: LeetCodeStats
}

type YouTubeStats {
  channelName: String!
  subscribers: Int!
  views: Int!
  videos: Int!
  error: String
}

type GitHubStats {
  username: String!
  publicRepos: Int!
  followers: Int!
  starsReceived: Int!
  error: String
}

type TwitchStats {
  displayName: String!
  description: String!
  broadcasterType: String!
  followers: Int!
  error: String
}

type LeetCodeStats {
  username: String!
  languages: String!
  solvedCount: Int!
  ranking: Int!
  error: String
}`;
            document.getElementById('result').textContent = schema;
        }

        async function executeQuery() {
            const query = document.getElementById('query').value.trim();
            const resultDiv = document.getElementById('result');

            if (!query) {
                resultDiv.textContent = '‚ùå Please enter a GraphQL query';
                return;
            }

            resultDiv.textContent = 'üîÑ Loading...';

            try {
                console.log('Executing query:', query); // Debug log
                const response = await fetch('/api/graphql', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ query: query })
                });

                const data = await response.json();
                console.log('Response:', data); // Debug log
                resultDiv.textContent = JSON.stringify(data, null, 2);
            } catch (error) {
                console.error('Query error:', error); // Debug log
                resultDiv.textContent = '‚ùå Error: ' + error.message;
            }
        }
    </script>
</body>
</html>